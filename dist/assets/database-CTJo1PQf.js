class n{constructor(){console.log("üóÑÔ∏è DatabaseService inicializado (localStorage)")}async getLeadByCPF(a){try{const e=a.replace(/[^\d]/g,""),r=JSON.parse(localStorage.getItem("leads")||"[]").find(o=>o.cpf&&o.cpf.replace(/[^\d]/g,"")===e);return r?(console.log("‚úÖ Lead encontrado no localStorage:",r),{success:!0,data:r}):(console.log("‚ùå Lead n√£o encontrado no localStorage para CPF:",e),{success:!1,error:"Lead n√£o encontrado"})}catch(e){return console.error("‚ùå Erro ao buscar lead no localStorage:",e),{success:!1,error:e.message}}}async createLead(a){try{const e=JSON.parse(localStorage.getItem("leads")||"[]");return a.id=Date.now().toString(),a.created_at=new Date().toISOString(),a.updated_at=new Date().toISOString(),e.push(a),localStorage.setItem("leads",JSON.stringify(e)),console.log("‚úÖ Lead criado no localStorage:",a),{success:!0,data:a}}catch(e){return console.error("‚ùå Erro ao criar lead no localStorage:",e),{success:!1,error:e.message}}}async updatePaymentStatus(a,e){try{const t=a.replace(/[^\d]/g,""),r=JSON.parse(localStorage.getItem("leads")||"[]"),o=r.findIndex(s=>s.cpf&&s.cpf.replace(/[^\d]/g,"")===t);return o!==-1?(r[o].status_pagamento=e,r[o].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(r)),console.log("‚úÖ Status de pagamento atualizado no localStorage:",e),{success:!0,data:r[o]}):(console.log("‚ùå Lead n√£o encontrado para atualizar status de pagamento"),{success:!1,error:"Lead n√£o encontrado"})}catch(t){return console.error("‚ùå Erro ao atualizar status de pagamento:",t),{success:!1,error:t.message}}}async updateLeadStage(a,e){try{const t=a.replace(/[^\d]/g,""),r=JSON.parse(localStorage.getItem("leads")||"[]"),o=r.findIndex(s=>s.cpf&&s.cpf.replace(/[^\d]/g,"")===t);return o!==-1?(r[o].etapa_atual=e,r[o].updated_at=new Date().toISOString(),localStorage.setItem("leads",JSON.stringify(r)),console.log("‚úÖ Etapa do lead atualizada no localStorage:",e),{success:!0,data:r[o]}):(console.log("‚ùå Lead n√£o encontrado para atualizar etapa"),{success:!1,error:"Lead n√£o encontrado"})}catch(t){return console.error("‚ùå Erro ao atualizar etapa do lead:",t),{success:!1,error:t.message}}}async getData(){try{return{success:!0,data:JSON.parse(localStorage.getItem("leads")||"[]")}}catch(a){return console.error("‚ùå Erro ao obter dados:",a),{success:!1,error:a.message}}}}export{n as D};
